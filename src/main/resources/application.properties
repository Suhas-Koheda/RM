spring.application.name=RecuritrManager

# Database
spring.datasource.url=${DB_URL:jdbc:postgresql://ep-green-hill-a9itt1vo-pooler.gwc.azure.neon.tech/rm}
spring.datasource.username=${DB_USERNAME:rm_owner}
spring.datasource.password=${DB_PASSWORD:npg_p96kmWNlHSVc}
spring.datasource.driver-class-name=${DB_DRIVER:org.postgresql.Driver}

# JPA
spring.jpa.show-sql=${JPA_SHOW_SQL:true}
spring.jpa.hibernate.ddl-auto=${JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.properties.hibernate.dialect=${JPA_HIBERNATE_DIALECT:org.hibernate.dialect.PostgreSQLDialect}

# Google Gemini API
langchain4j.google-ai-gemini.chat-model.api-key=${GEMINI_API_KEY:AIzaSyDm3VI03IMnQXkGz6CNXHD6-eubZy38M0s}
langchain4j.google-ai-gemini.enabled=${GEMINI_ENABLED:true}
langchain4j.google-ai-gemini.chat-model.enabled=${GEMINI_CHAT_MODEL_ENABLED:true}
langchain4j.google-ai-gemini.chat-model.model-name=${GEMINI_CHAT_MODEL_NAME:gemini-2.0-flash}
langchain4j.google-ai-gemini.chat-model.function-calling-config.gemini-mode=${GEMINI_FUNCTION_CALLING_MODE:ANY}
langchain4j.google-ai-gemini.chat-model.function-calling-config.allowed-function-names=${GEMINI_ALLOWED_FUNCTIONS:allowCodeExecution,includeCodeExecutionOutput,buildAnalysedResults}

server.port=8432
